{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Easy Way to Submit URLs to IndexNow","text":"","tags":["Tutorial"]},{"location":"#indexnow-for-python","title":"IndexNow for Python \ud83d\udd0e","text":"","tags":["Tutorial"]},{"location":"#why-use-indexnow-for-python","title":"Why Use IndexNow for Python?","text":"<p>If you are concerned about search engine optimization (SEO) and want to make sure your website is indexed frequently by Bing, Yandex, DuckDuckGo, and other search engines, then IndexNow for Python may be the right choice for you.</p> <p>IndexNow for Python is a lightweight, yet powerful Python package that makes it easy to submit URLs or entire sitemaps to the IndexNow API of various search engines, so your pages can be indexed faster.</p> <p>What is IndexNow?</p> <p>IndexNow is an open source protocol that allows website owners to notify search engines when their content has changed, so that search engines can quickly crawl and index the new content. This is particularly useful for sites that update frequently or have dynamic content, and it is useful for search engines to know which pages to crawl and index since the last visit.</p> <p>By using IndexNow, you can ensure that your website is indexed more frequently, which can improve your search engine rankings and drive more traffic to your site.</p> <p>Search engines such as Bing, Yandex, DuckDuckGo (via Bing's index) and others already support IndexNow, but not all search engines. For example, Google is not on board, but this may change in the future.</p>","tags":["Tutorial"]},{"location":"#how-it-works-and-submitting-urls-to-a-search-engine","title":"How It Works and Submitting URLs to a Search Engine","text":"","tags":["Tutorial"]},{"location":"#individual-url","title":"Individual URL","text":"<p>Firstly, ensure that you have an API key for IndexNow. Hereafter, add your authentication credentials to the <code>IndexNowAuthentication</code> class, which will be used throughout the examples:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n</code></pre> <p>You can now submit individual URLs to the IndexNow API:</p> <pre><code>submit_url_to_index_now(authentication, \"https://example.com/page1\")\n</code></pre>","tags":["Tutorial"]},{"location":"#multiple-urls-in-bulk","title":"Multiple URLs in Bulk","text":"<p>How to submit multiple URLs in bulk to the IndexNow API:</p> Python<pre><code>from index_now import submit_urls_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nurls = [\n    \"https://example.com/page1\",\n    \"https://example.com/page2\",\n    \"https://example.com/page3\",\n]\n\nsubmit_urls_to_index_now(authentication, urls)\n</code></pre>","tags":["Tutorial"]},{"location":"#entire-sitemap","title":"Entire Sitemap","text":"<p>How to submit an entire sitemap to the IndexNow API:</p> Python<pre><code>from index_now import submit_sitemap_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsitemap_location = \"https://example.com/sitemap.xml\"\n\nsubmit_sitemap_to_index_now(authentication, sitemap_location)\n</code></pre>","tags":["Tutorial"]},{"location":"#submit-to-different-search-engines","title":"Submit to Different Search Engines","text":"<p>How to use the default <code>SearchEngineEndpoint</code> options or a custom endpoint:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication, SearchEngineEndpoint\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nendpoint_bing = SearchEngineEndpoint.BING\nendpoint_custom = \"https://example.com/indexnow\"\n\nfor endpoint in [endpoint_bing, endpoint_custom]:\n    submit_url_to_index_now(authentication, \"https://example.com/page1\",\n        endpoint)\n</code></pre> <p>Warning</p> <p>It is not recommended to submit the same URLs to multiple endpoints. Once you have successfully submitted to one IndexNow endpoint, the IndexNow service is designed to propagate your URLs to other search engines, so you do not need to submit to multiple times.</p>","tags":["Tutorial"]},{"location":"#next-steps","title":"Next Steps","text":"<p>Ready to try? Let's get started.</p> <p>Become a Sponsor</p> <p>If you find this project helpful, please consider supporting its development. Your donations will help keep it alive and growing. Every contribution, no matter the size, makes a difference.</p> <p>Donate on GitHub Sponsors</p> <p>Thank you for your support! \ud83d\ude4c</p>","tags":["Tutorial"]},{"location":"getting-started/","title":"Get Started in 3 Easy Steps \ud83d\ude80","text":"<p>Ready to try the easy way to submit URLs to the IndexNow API of various search engines? Let's get started:</p>","tags":["Tutorial","Installation","Authentication","API Key","PyPI"]},{"location":"getting-started/#1-install-indexnow-for-python-package","title":"1. Install IndexNow for Python Package","text":"<p>Assuming that Python is already installed, execute this command in the terminal to install the Timer package:</p> <pre><code>pip install index-now-for-python\n</code></pre> <p>Find more details and options in the installation guide.</p>","tags":["Tutorial","Installation","Authentication","API Key","PyPI"]},{"location":"getting-started/#2-set-up-an-api-key","title":"2. Set Up an API Key","text":"<p>To verify ownership of your domain, you need to create an API key. This key is hosted on your website so that the IndexNow API service can authenticate your requests. The API key is required each time you submit a URL to the IndexNow API.</p> <p>For more information about the API key, see the official IndexNow documentation or the getting started guide from Microsoft Bing. Or learn how to generate your own API key.</p>","tags":["Tutorial","Installation","Authentication","API Key","PyPI"]},{"location":"getting-started/#3-first-script","title":"3. First Script","text":"<p>You're now ready to submit your first URL to the IndexNow API. Simply adjust the code below to match your website's domain and API key, then run it:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page1\")\n</code></pre>","tags":["Tutorial","Installation","Authentication","API Key","PyPI"]},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<p>Find more usage examples and tutorials in the user guide section.</p> <p>Become a Sponsor</p> <p>If you find this project helpful, please consider supporting its development. Your donations will help keep it alive and growing. Every contribution, no matter the size, makes a difference.</p> <p>Donate on GitHub Sponsors</p> <p>Thank you for your support! \ud83d\ude4c</p>","tags":["Tutorial","Installation","Authentication","API Key","PyPI"]},{"location":"getting-started/installation/","title":"How to Install","text":"","tags":["Installation","PyPI","Homebrew"]},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10 or higher</li> </ul> <p>Assuming that Python is installed already, you can install IndexNow for Python with either of the following package managers: PyPI or Homebrew.</p>","tags":["Installation","PyPI","Homebrew"]},{"location":"getting-started/installation/#pypi","title":"PyPI","text":"<p>For PyPI, execute this command in the terminal:</p> <pre><code>pip install index-now-for-python\n</code></pre> <p>Keep the package up to date with this command:</p> <pre><code>pip install --upgrade index-now-for-python\n</code></pre>","tags":["Installation","PyPI","Homebrew"]},{"location":"getting-started/installation/#homebrew","title":"Homebrew","text":"<p>If you already have installed the Homebrew package manager for Mac and Linux, execute this terminal command to tap and install IndexNow for Python:</p> <pre><code>brew tap jakob-bagterp/index-now-for-python\nbrew install index-now-for-python\n</code></pre> <p>Use the same commands to keep the package up to date with Homebrew.</p>","tags":["Installation","PyPI","Homebrew"]},{"location":"index/tags/","title":"Tags","text":"<p>List of all tags and relevant pages:</p>"},{"location":"index/tags/#tag:api-endpoint","title":"API Endpoint","text":"<ul> <li>            Custom Endpoint          </li> <li>            Default Endpoints          </li> <li>            SearchEngineEndpoint          </li> </ul>"},{"location":"index/tags/#tag:api-key","title":"API Key","text":"<ul> <li>            Generate API Key          </li> <li>            Generate API Keys          </li> <li>            Get Started with IndexNow in 3 Easy Steps          </li> </ul>"},{"location":"index/tags/#tag:authentication","title":"Authentication","text":"<ul> <li>            Authentication          </li> <li>            Get Started with IndexNow in 3 Easy Steps          </li> <li>            IndexNowAuthentication          </li> </ul>"},{"location":"index/tags/#tag:automation","title":"Automation","text":"<ul> <li>            Automated Workflows          </li> </ul>"},{"location":"index/tags/#tag:bing","title":"Bing","text":"<ul> <li>            Default Endpoints          </li> <li>            SearchEngineEndpoint          </li> </ul>"},{"location":"index/tags/#tag:change-frequency","title":"Change Frequency","text":"<ul> <li>            ChangeFrequency          </li> <li>            Entire Sitemap or Multiple Sitemaps          </li> <li>            SitemapFilter          </li> </ul>"},{"location":"index/tags/#tag:date-range","title":"Date Range","text":"<ul> <li>            DateRange          </li> <li>            Entire Sitemap or Multiple Sitemaps          </li> <li>            SitemapFilter          </li> </ul>"},{"location":"index/tags/#tag:documentation","title":"Documentation","text":"<ul> <li>            ChangeFrequency          </li> <li>            DateRange          </li> <li>            Documentation          </li> <li>            Generate API Key          </li> <li>            IndexNowAuthentication          </li> <li>            SearchEngineEndpoint          </li> <li>            SitemapFilter          </li> <li>            Submit Entire Sitemap          </li> <li>            Submit Multiple Sitemaps          </li> <li>            Submit Multiple URLs          </li> <li>            Submit Single URL          </li> </ul>"},{"location":"index/tags/#tag:features","title":"Features","text":"<ul> <li>            User Guide \ud83d\udc68\u200d\ud83d\udd27          </li> </ul>"},{"location":"index/tags/#tag:filtering","title":"Filtering","text":"<ul> <li>            ChangeFrequency          </li> <li>            DateRange          </li> <li>            Entire Sitemap or Multiple Sitemaps          </li> <li>            SitemapFilter          </li> </ul>"},{"location":"index/tags/#tag:github-actions","title":"GitHub Actions","text":"<ul> <li>            Automated Workflows          </li> </ul>"},{"location":"index/tags/#tag:homebrew","title":"Homebrew","text":"<ul> <li>            Installation          </li> </ul>"},{"location":"index/tags/#tag:installation","title":"Installation","text":"<ul> <li>            Get Started with IndexNow in 3 Easy Steps          </li> <li>            Installation          </li> </ul>"},{"location":"index/tags/#tag:last-modified","title":"Last Modified","text":"<ul> <li>            DateRange          </li> <li>            Entire Sitemap or Multiple Sitemaps          </li> <li>            SitemapFilter          </li> </ul>"},{"location":"index/tags/#tag:naver","title":"Naver","text":"<ul> <li>            Default Endpoints          </li> <li>            SearchEngineEndpoint          </li> </ul>"},{"location":"index/tags/#tag:pypi","title":"PyPI","text":"<ul> <li>            Get Started with IndexNow in 3 Easy Steps          </li> <li>            Installation          </li> </ul>"},{"location":"index/tags/#tag:settings","title":"Settings","text":"<ul> <li>            Authentication          </li> <li>            Custom Endpoint          </li> <li>            Default Endpoints          </li> <li>            Generate API Keys          </li> <li>            IndexNowAuthentication          </li> <li>            SearchEngineEndpoint          </li> </ul>"},{"location":"index/tags/#tag:seznam","title":"Seznam","text":"<ul> <li>            Default Endpoints          </li> <li>            SearchEngineEndpoint          </li> </ul>"},{"location":"index/tags/#tag:sitemap","title":"Sitemap","text":"<ul> <li>            ChangeFrequency          </li> <li>            DateRange          </li> <li>            Entire Sitemap or Multiple Sitemaps          </li> <li>            Extract URLs from a Sitemap          </li> <li>            SitemapFilter          </li> <li>            Submit Entire Sitemap          </li> <li>            Submit Multiple Sitemaps          </li> </ul>"},{"location":"index/tags/#tag:status-codes","title":"Status Codes","text":"<ul> <li>            Submit Entire Sitemap          </li> <li>            Submit Multiple Sitemaps          </li> <li>            Submit Multiple URLs          </li> <li>            Submit Single URL          </li> <li>            Using Status Codes          </li> </ul>"},{"location":"index/tags/#tag:tutorial","title":"Tutorial","text":"<ul> <li>            Authentication          </li> <li>            Automated Workflows          </li> <li>            ChangeFrequency          </li> <li>            Custom Endpoint          </li> <li>            DateRange          </li> <li>            Default Endpoints          </li> <li>            Entire Sitemap or Multiple Sitemaps          </li> <li>            Extract URLs from a Sitemap          </li> <li>            Generate API Key          </li> <li>            Generate API Keys          </li> <li>            Get Started with IndexNow in 3 Easy Steps          </li> <li>            IndexNowAuthentication          </li> <li>            Multiple URLs          </li> <li>            SearchEngineEndpoint          </li> <li>            Single URL          </li> <li>            SitemapFilter          </li> <li>            Submit Entire Sitemap          </li> <li>            Submit Multiple Sitemaps          </li> <li>            Submit Multiple URLs          </li> <li>            Submit Single URL          </li> <li>            The Easy Way to Submit URLs to IndexNow          </li> <li>            User Guide \ud83d\udc68\u200d\ud83d\udd27          </li> <li>            Using Status Codes          </li> </ul>"},{"location":"index/tags/#tag:yandex","title":"Yandex","text":"<ul> <li>            Default Endpoints          </li> <li>            SearchEngineEndpoint          </li> </ul>"},{"location":"index/tags/#tag:yep","title":"Yep","text":"<ul> <li>            Default Endpoints          </li> <li>            SearchEngineEndpoint          </li> </ul>"},{"location":"project/donate/","title":"Donations","text":"<p>This project is a community-driven open-source initiative, developed without commercial interests and shared freely for anyone to use, improve, and build upon. What began as a simple idea has grown beyond expectations, with downloads far surpassing our initial goals:</p> <p></p> <p>Your support \u2013 whether through contributions, feedback, or simply spreading the word \u2013 is vital to help us maintain and continue enhancing the project for everyone.</p> <p>Become a Sponsor</p> <p>If you find this project helpful, please consider supporting its development. Your donations will help keep it alive and growing. Every contribution, no matter the size, makes a difference.</p> <p>Donate on GitHub Sponsors</p> <p>Thank you for your support! \ud83d\ude4c</p>"},{"location":"project/support-and-contribution/","title":"Support and Contribution","text":"<p>This open-source project welcomes contributions from the community. Your support is vital for maintaining and improving it.</p> <p>Before contributing or reporting issues, please ensure that you ruled out issues that are not related to this project.</p>"},{"location":"project/support-and-contribution/#contribute","title":"Contribute","text":"<p>If you have suggestions or changes to the module, feel free to add to the code and create a pull request.</p>"},{"location":"project/support-and-contribution/#report-bugs","title":"Report Bugs","text":"<p>If you encounter any issues, you can report them as bugs or raise issues.</p> <p>Become a Sponsor</p> <p>If you find this project helpful, please consider supporting its development. Your donations will help keep it alive and growing. Every contribution, no matter the size, makes a difference.</p> <p>Donate on GitHub Sponsors</p> <p>Thank you for your support! \ud83d\ude4c</p>"},{"location":"reference/","title":"Documentation \ud83d\udcda","text":"<p>Find details about all methods in this section.</p>","tags":["Documentation"]},{"location":"reference/#quick-links","title":"Quick Links","text":"<p>How to submit:</p> <ul> <li>Single URL</li> <li>Multiple URLs</li> <li>Entire sitemap</li> <li>Multiple sitemaps</li> </ul> <p>Using the sitemap filter:</p> <ul> <li>Sitemap filter</li> <li>Date ranges</li> </ul> <p>Configuration:</p> <ul> <li>IndexNowAuthentication</li> <li>SearchEngineEndpoint</li> </ul>","tags":["Documentation"]},{"location":"reference/#support-the-project","title":"Support the Project","text":"<p>Become a Sponsor</p> <p>If you find this project helpful, please consider supporting its development. Your donations will help keep it alive and growing. Every contribution, no matter the size, makes a difference.</p> <p>Donate on GitHub Sponsors</p> <p>Thank you for your support! \ud83d\ude4c</p>","tags":["Documentation"]},{"location":"reference/configuration/authentication/","title":"Authentication Settings for IndexNow","text":"","tags":["Documentation","Tutorial","Settings","Authentication"]},{"location":"reference/configuration/authentication/#indexnowauthentication","title":"<code>IndexNowAuthentication</code>","text":"<p>Authentication credentials for the IndexNow API.</p> <p>Parameters:</p> Name Type Description Default <code>host</code> <code>str</code> <p>The host of the website to be indexed, e.g. <code>example.com</code>.</p> required <code>api_key</code> <code>str</code> <p>The IndexNow API key, e.g. <code>a1b2c3d4</code>.</p> required <code>api_key_location</code> <code>str</code> <p>The URL of the IndexNow API key file, e.g. <code>https://example.com/a1b2c3d4.txt</code>.</p> required Example <p>Basic usage:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page1\")\n</code></pre>","tags":["Documentation","Tutorial","Settings","Authentication"]},{"location":"reference/configuration/endpoint/","title":"Endpoint Settings for Search Engines","text":"","tags":["Documentation","Tutorial","API Endpoint","Settings","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"reference/configuration/endpoint/#searchengineendpoint","title":"<code>SearchEngineEndpoint</code>","text":"<p>Endpoint options for the IndexNow API.</p> <p>Attributes:</p> Name Type Description <code>SearchEngineEndpoint.INDEXNOW</code> <code>Enum</code> <p>IndexNow default endpoint.</p> <code>SearchEngineEndpoint.BING</code> <code>Enum</code> <p>Microsoft Bing.</p> <code>SearchEngineEndpoint.NAVER</code> <code>Enum</code> <p>Naver.</p> <code>SearchEngineEndpoint.SEZNAM</code> <code>Enum</code> <p>Seznam.cz.</p> <code>SearchEngineEndpoint.YANDEX</code> <code>Enum</code> <p>Yandex.</p> <code>SearchEngineEndpoint.YEP</code> <code>Enum</code> <p>Yep.</p> Example <p>How to submit a URL to the IndexNow API using different endpoint options or a custom endpoint:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication, SearchEngineEndpoint\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nendpoint_bing = SearchEngineEndpoint.BING\nendpoint_yandex = SearchEngineEndpoint.YANDEX\nendpoint_custom = \"https://example.com/indexnow\"\n\nfor endpoint in [endpoint_bing, endpoint_yandex, endpoint_custom]:\n    submit_url_to_index_now(authentication, \"https://example.com/page1\", endpoint)\n</code></pre> <p>Tip</p> <p>The IndexNow organisation maintains a list of currently available search engines that support the IndexNow API. Find it here:</p> <p>indexnow.org/searchengines.json</p> <p>Warning</p> <p>It is not recommended to submit the same URLs to multiple endpoints. Once you have successfully submitted to one IndexNow endpoint, the IndexNow service is designed to propagate your URLs to other search engines, so you do not need to submit to multiple times.</p>","tags":["Documentation","Tutorial","API Endpoint","Settings","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"reference/methods/generate-api-key/","title":"Generate API Key for IndexNow","text":"","tags":["Documentation","Tutorial","API Key"]},{"location":"reference/methods/generate-api-key/#generate_api_key","title":"<code>generate_api_key()</code>","text":"<p>Generate a random API key for IndexNow. Reference: indexnow.org/documentation</p> <p>Parameters:</p> Name Type Description Default <code>length</code> <code>int</code> <p>Length of the API key. Should be minimum 8 and maximum 128.</p> <code>32</code> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>An 8 to 128 character hexadecimal string, e.g. <code>5017988d51af458491d21ecab6ed1811</code> for a length of 32 characters.</p> Example <p>How to generate a random API key:</p> Python<pre><code>from index_now import generate_api_key\n\napi_key = generate_api_key()\n\nprint(api_key)\n</code></pre> <p>This will print a random API key of 32 characters. Example:</p> <pre><code>5017988d51af458491d21ecab6ed1811\n</code></pre> <p>How to generate a random API key with a custom length:</p> Python<pre><code>from index_now import generate_api_key\n\napi_key_16 = generate_api_key(length=16)\napi_key_64 = generate_api_key(length=64)\n\nprint(api_key_16)\nprint(api_key_64)\n</code></pre> <p>This will print two random API keys of 16 and 64 characters. Example:</p> <pre><code>5017988d51af4584\n5017988d51af458491d21ecab6ed18115017988d51af458491d21ecab6ed1811\n</code></pre>","tags":["Documentation","Tutorial","API Key"]},{"location":"reference/methods/submit-multiple-sitemaps/","title":"Submit Multiple Sitemaps to the IndexNow API","text":"","tags":["Documentation","Tutorial","Status Codes","Sitemap"]},{"location":"reference/methods/submit-multiple-sitemaps/#submit_sitemaps_to_index_now","title":"<code>submit_sitemaps_to_index_now()</code>","text":"<p>Submit multiple sitemaps to the IndexNow API of a search engine.</p> <p>Parameters:</p> Name Type Description Default <code>authentication</code> <code>IndexNowAuthentication</code> <p>Authentication credentials for the IndexNow API.</p> required <code>sitemap_locations</code> <code>list[str]</code> <p>List of sitemap locations to submit, e.g. <code>[\"https://example.com/sitemap1.xml\", \"https://example.com/sitemap2.xml, \"https://example.com/sitemap3.xml\"]</code>.</p> required <code>filter</code> <code>SitemapFilter | None</code> <p>Optional filter for URLs. Ignored by default or if set to <code>None</code>.</p> <code>None</code> <code>endpoint</code> <code>SearchEngineEndpoint | str</code> <p>Select the search engine you want to submit to or use a custom URL as endpoint.</p> <code>INDEXNOW</code> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Status code of the response, e.g. <code>200</code> or <code>202</code> for, respectively, success or accepted, or <code>400</code> for bad request, etc.</p> Example <p>After adding your authentication credentials to the <code>IndexNowAuthentication</code> class, you can now submit multiple sitemaps to the IndexNow API:</p> Python<pre><code>from index_now import submit_sitemaps_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsitemap_locations = [\n    \"https://example.com/sitemap1.xml\",\n    \"https://example.com/sitemap2.xml\",\n    \"https://example.com/sitemap3.xml\",\n]\n\nsubmit_sitemaps_to_index_now(authentication, sitemap_locations)\n</code></pre> <p>If you want to submit to a specific search engine, alternatively customize the endpoint:</p> <pre><code>submit_sitemaps_to_index_now(authentication, sitemap_location,\n    endpoint=\"https://www.bing.com/indexnow\")\n</code></pre> <p>If you want to only upload a portion of the sitemap URLs, apply the <code>skip</code> and <code>take</code> parameters in the <code>SitemapFilter</code> class:</p> Python<pre><code>from index_now import submit_sitemaps_to_index_now, IndexNowAuthentication, SitemapFilter\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsitemap_locations = [\n    \"https://example.com/sitemap1.xml\",\n    \"https://example.com/sitemap2.xml\",\n    \"https://example.com/sitemap3.xml\",\n]\n\nfilter = SitemapFilter(skip=100, take=50)\n\nsubmit_sitemaps_to_index_now(authentication, sitemap_location, filter)\n</code></pre> <p>Instead of filtering by amount, you can filter by last modified date using the <code>date_range</code> parameter. Firstly, add one of the date range options to the imports, e.g. <code>DaysAgo</code>:</p> <pre><code>from index_now import DaysAgo, submit_sitemaps_to_index_now, IndexNowAuthentication, SitemapFilter\n</code></pre> <p>Then use the <code>date_range</code> parameter to filter URLs by last modified date:</p> <pre><code>filter = SitemapFilter(date_range=DaysAgo(2))\n</code></pre> <p>Or target URLs with a specific pattern using the <code>contains</code> parameter:</p> <pre><code>filter = SitemapFilter(contains=\"section1\")\n</code></pre> <p>The <code>contains</code> parameter also accepts regular expressions for more advanced filtering:</p> <pre><code>filter = SitemapFilter(contains=r\"(section1)|(section2)\")\n</code></pre> <p>Or use the <code>excludes</code> parameter to exclude URLs that match a specific pattern:</p> <pre><code>filter = SitemapFilter(excludes=\"page1\")\n</code></pre> <p>Or combine all the <code>contains</code> and <code>excludes</code>, <code>skip</code> and <code>take</code>, <code>date_range</code> and other parameters to filter the URLs even further:</p> <pre><code>filter = SitemapFilter(\n    date_range=DaysAgo(2),\n    contains=r\"(section1)|(section2)\",\n    excludes=\"page1\",\n    skip=100,\n    take=50\n)\n</code></pre>","tags":["Documentation","Tutorial","Status Codes","Sitemap"]},{"location":"reference/methods/submit-multiple-urls/","title":"Submit Multiple URLs in Bulk to the IndexNow API","text":"","tags":["Documentation","Tutorial","Status Codes"]},{"location":"reference/methods/submit-multiple-urls/#submit_urls_to_index_now","title":"<code>submit_urls_to_index_now()</code>","text":"<p>Submit a list of URLs to the IndexNow API of a search engine.</p> <p>Parameters:</p> Name Type Description Default <code>authentication</code> <code>IndexNowAuthentication</code> <p>Authentication credentials for the IndexNow API.</p> required <code>urls</code> <code>list[str]</code> <p>List of URLs to submit. For example: <code>[\"https://example.com/page1\", \"https://example.com/page2\", \"https://example.com/page3\"]</code></p> required <code>endpoint</code> <code>SearchEngineEndpoint | str</code> <p>Select the search engine you want to submit to or use a custom URL as endpoint.</p> <code>INDEXNOW</code> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>The status code of the response, e.g. <code>200</code> for success, <code>202</code> for accepted, <code>400</code> for bad request, etc.</p> Example <p>After adding your authentication credentials to the <code>IndexNowAuthentication</code> class, you can now submit multiple URLs to the IndexNow API:</p> Python<pre><code>from index_now import submit_urls_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nurls = [\"https://example.com/page1\", \"https://example.com/page2\", \"https://example.com/page3\"]\n\nsubmit_urls_to_index_now(authentication, urls)\n</code></pre> <p>If you want to submit to a specific search engine, alternatively customize the endpoint:</p> <pre><code>submit_urls_to_index_now(authentication, urls,\n    endpoint=\"https://www.bing.com/indexnow\")\n</code></pre>","tags":["Documentation","Tutorial","Status Codes"]},{"location":"reference/methods/submit-single-url/","title":"Submit Single URL to the IndexNow API","text":"","tags":["Documentation","Tutorial","Status Codes"]},{"location":"reference/methods/submit-single-url/#submit_url_to_index_now","title":"<code>submit_url_to_index_now()</code>","text":"<p>Submit a list of URLs to the IndexNow API of a search engine.</p> <p>Parameters:</p> Name Type Description Default <code>authentication</code> <code>IndexNowAuthentication</code> <p>Authentication credentials for the IndexNow API.</p> required <code>url</code> <code>str</code> <p>URL to submit, e.g. <code>\"https://example.com/page1\"</code>.</p> required <code>endpoint</code> <code>SearchEngineEndpoint | str</code> <p>Select the search engine you want to submit to or use a custom URL as endpoint.</p> <code>INDEXNOW</code> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>The status code of the response, e.g. <code>200</code> for success, <code>202</code> for accepted, <code>400</code> for bad request, etc.</p> Example <p>After adding your authentication credentials to the <code>IndexNowAuthentication</code> class, you can now submit a single URL to the IndexNow API:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nurl = \"https://example.com/page1\"\n\nsubmit_url_to_index_now(authentication, url)\n</code></pre> <p>If you want to submit to a specific search engine, alternatively customize the endpoint:</p> <pre><code>submit_url_to_index_now(authentication, url,\n    endpoint=\"https://www.bing.com/indexnow\")\n</code></pre>","tags":["Documentation","Tutorial","Status Codes"]},{"location":"reference/methods/submit-sitemap/","title":"Submit Entire Sitemap to the IndexNow API","text":"","tags":["Documentation","Tutorial","Status Codes","Sitemap"]},{"location":"reference/methods/submit-sitemap/#submit_sitemap_to_index_now","title":"<code>submit_sitemap_to_index_now()</code>","text":"<p>Submit a sitemap to the IndexNow API of a search engine.</p> <p>Parameters:</p> Name Type Description Default <code>authentication</code> <code>IndexNowAuthentication</code> <p>Authentication credentials for the IndexNow API.</p> required <code>sitemap_location</code> <code>str</code> <p>The URL of the sitemap to submit, e.g. <code>https://example.com/sitemap.xml</code>.</p> required <code>filter</code> <code>SitemapFilter | None</code> <p>Optional filter for URLs. Ignored by default or if set to <code>None</code>.</p> <code>None</code> <code>endpoint</code> <code>SearchEngineEndpoint | str</code> <p>Select the search engine you want to submit to or use a custom URL as endpoint.</p> <code>INDEXNOW</code> <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Status code of the response, e.g. <code>200</code> or <code>202</code> for, respectively, success or accepted, or <code>400</code> for bad request, etc.</p> Example <p>After adding your authentication credentials to the <code>IndexNowAuthentication</code> class, you can now submit an entire sitemap to the IndexNow API:</p> Python<pre><code>from index_now import submit_sitemap_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsitemap_location = \"https://example.com/sitemap.xml\"\n\nsubmit_sitemap_to_index_now(authentication, sitemap_location)\n</code></pre> <p>If you want to submit to a specific search engine, alternatively customize the endpoint:</p> <pre><code>submit_sitemap_to_index_now(authentication, sitemap_location,\n    endpoint=\"https://www.bing.com/indexnow\")\n</code></pre> <p>If you want to only upload a portion of the sitemap URLs, apply the <code>skip</code> and <code>take</code> parameters in the <code>SitemapFilter</code> class:</p> Python<pre><code>from index_now import submit_sitemap_to_index_now, IndexNowAuthentication, SitemapFilter\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsitemap_location = \"https://example.com/sitemap.xml\"\n\nfilter = SitemapFilter(skip=100, take=50)\n\nsubmit_sitemap_to_index_now(authentication, sitemap_location, filter)\n</code></pre> <p>Instead of filtering by amount, you can filter by last modified date using the <code>date_range</code> parameter. Firstly, add one of the date range options to the imports, e.g. <code>DaysAgo</code>:</p> <pre><code>from index_now import DaysAgo, submit_sitemaps_to_index_now, IndexNowAuthentication, SitemapFilter\n</code></pre> <p>Then use the <code>date_range</code> parameter to filter URLs by last modified date:</p> <pre><code>filter = SitemapFilter(date_range=DaysAgo(2))\n</code></pre> <p>Or target URLs with a specific pattern using the <code>contains</code> parameter:</p> <pre><code>filter = SitemapFilter(contains=\"section1\")\n</code></pre> <p>The <code>contains</code> parameter also accepts regular expressions for more advanced filtering:</p> <pre><code>filter = SitemapFilter(contains=r\"(section1)|(section2)\")\n</code></pre> <p>Or use the <code>excludes</code> parameter to exclude URLs that match a specific pattern:</p> <pre><code>filter = SitemapFilter(excludes=\"page1\")\n</code></pre> <p>Or combine all the <code>contains</code> and <code>excludes</code>, <code>skip</code> and <code>take</code>, <code>date_range</code> and other parameters to filter the URLs even further:</p> <pre><code>filter = SitemapFilter(\n    date_range=DaysAgo(2),\n    contains=r\"(section1)|(section2)\",\n    excludes=\"page1\",\n    skip=100,\n    take=50\n)\n</code></pre>","tags":["Documentation","Tutorial","Status Codes","Sitemap"]},{"location":"reference/sitemap-filter/change-frequency/","title":"Change Frequency Filter Options","text":"","tags":["Documentation","Tutorial","Sitemap","Filtering","Change Frequency"]},{"location":"reference/sitemap-filter/change-frequency/#example","title":"Example","text":"<p>Let's imagine a basic sitemap with three URLs, each with different change frequencies:</p> sitemap.xml<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com&lt;/loc&gt;\n        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;always&lt;/changefreq&gt;\n        &lt;priority&gt;1.0&lt;/priority&gt;\n    &lt;/url&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com/page1&lt;/loc&gt;\n        &lt;lastmod&gt;2025-02-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;hourly&lt;/changefreq&gt;\n        &lt;priority&gt;0.8&lt;/priority&gt;\n    &lt;/url&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com/page2&lt;/loc&gt;\n        &lt;lastmod&gt;2025-03-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;daily&lt;/changefreq&gt;\n        &lt;priority&gt;0.5&lt;/priority&gt;\n    &lt;/url&gt;\n&lt;/urlset&gt;\n</code></pre> <p>With <code>ChangeFrequency.DAILY</code> in the <code>SitemapFilter</code> we can target any URLs that have a change frequency of <code>daily</code>. Effectively, this will submit the URL <code>https://example.com/page2</code> to IndexNow because only it has that change frequency:</p> Python<pre><code>from index_now import submit_sitemap_to_index_now, IndexNowAuthentication, SitemapFilter, ChangeFrequency\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nfilter = SitemapFilter(change_frequency=ChangeFrequency.DAILY)\n\nsubmit_sitemap_to_index_now(\n    authentication, \"https://example.com/sitemap.xml\", filter)\n</code></pre> <p>Instead of the predefined <code>ChangeFrequency</code> enumerations, you can also use basic string input:</p> <pre><code>filter = SitemapFilter(change_frequency=\"daily\")\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Change Frequency"]},{"location":"reference/sitemap-filter/change-frequency/#documentation","title":"Documentation","text":"","tags":["Documentation","Tutorial","Sitemap","Filtering","Change Frequency"]},{"location":"reference/sitemap-filter/change-frequency/#changefrequency","title":"<code>ChangeFrequency</code>","text":"<p>The change frequency of a sitemap URL, e.g. <code>&lt;changefreq&gt;monthly&lt;/changefreq&gt;</code>, and is used to indicate to a crawler how often the resource is expected to change. Find more inforation at www.sitemaps.org.</p> <p>Attributes:</p> Name Type Description <code>ChangeFrequency.ALWAYS</code> <code>Enum</code> <p>The resource is always changing.</p> <code>ChangeFrequency.HOURLY</code> <code>Enum</code> <p>The resource changes every hour.</p> <code>ChangeFrequency.DAILY</code> <code>Enum</code> <p>The resource changes every day.</p> <code>ChangeFrequency.WEEKLY</code> <code>Enum</code> <p>The resource changes every week.</p> <code>ChangeFrequency.MONTHLY</code> <code>Enum</code> <p>The resource changes every month.</p> <code>ChangeFrequency.YEARLY</code> <code>Enum</code> <p>The resource changes every year.</p> <code>ChangeFrequency.NEVER</code> <code>Enum</code> <p>The resource never changes.</p> Example <p>Get all URLs with a change frequency set to <code>daily</code>:</p> Python<pre><code>from index_now import SitemapFilter, ChangeFrequency\n\nfilter = SitemapFilter(change_frequency=ChangeFrequency.DAILY)\n</code></pre> <p>Instead of the predefined <code>ChangeFrequency</code> enumerations, you can also use basic string input:</p> <pre><code>filter = SitemapFilter(change_frequency=\"daily\")\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Change Frequency"]},{"location":"reference/sitemap-filter/date-range/","title":"Date Range Filter Options","text":"","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#example","title":"Example","text":"<p>The date range of the <code>SitemapFilter</code> is a powerful way to control which URLs are submitted to IndexNow based on their <code>&lt;lastmod&gt;</code> date. This is particularly useful for ensuring that only relevant and recent content is submitted.</p> <p>Let's image that we have a sitemap with three URLs, each with different last modified dates:</p> sitemap.xml<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com&lt;/loc&gt;\n        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;always&lt;/changefreq&gt;\n        &lt;priority&gt;1.0&lt;/priority&gt;\n    &lt;/url&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com/page1&lt;/loc&gt;\n        &lt;lastmod&gt;2025-02-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;hourly&lt;/changefreq&gt;\n        &lt;priority&gt;0.8&lt;/priority&gt;\n    &lt;/url&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com/page2&lt;/loc&gt;\n        &lt;lastmod&gt;2025-03-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;daily&lt;/changefreq&gt;\n        &lt;priority&gt;0.5&lt;/priority&gt;\n    &lt;/url&gt;\n&lt;/urlset&gt;\n</code></pre> <p>Using the <code>LaterThanAndIncluding</code> date range, we can target any URLs with a last modified date of March 1, 2025 or later:</p> Python<pre><code>from datetime import datetime\nfrom index_now import LaterThanAndIncluding, SitemapFilter, submit_sitemap_to_index_now, IndexNowAuthentication\n\nmarch_2025_or_later = LaterThanAndIncluding(datetime(2025, 3, 1))\nfilter = SitemapFilter(date_range=march_2025_or_later)\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_sitemap_to_index_now(\n    authentication, \"https://example.com/sitemap.xml\", filter)\n</code></pre> <p>This will effectively filter out URLs outside of this date range, ensuring that only the URL  <code>https://example.com/page2</code> is submitted to IndexNow.</p>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#documentation","title":"Documentation","text":"","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#daterange","title":"<code>DateRange</code>","text":"<p>A date range for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>datetime</code> <p>The start date of the range.</p> required <code>end</code> <code>datetime</code> <p>The end date of the range.</p> required Example Python<pre><code>from datetime import datetime\nfrom index_now import DateRange, SitemapFilter\n\njanuary_2025 = DateRange(\n    start=datetime(2025, 1, 1),\n    end=datetime(2025, 1, 31),\n)\n\nfilter = SitemapFilter(date_range=january_2025)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#between","title":"<code>Between</code>","text":"<p>A date range between two not included dates for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>datetime</code> <p>The start date of the range (not included in evaluation).</p> required <code>end</code> <code>datetime</code> <p>The end date of the range (not included in evaluation).</p> required Example Python<pre><code>from datetime import datetime\nfrom index_now import Between, SitemapFilter\n\njanuary_2_to_30_2025 = Between(\n    start=datetime(2025, 1, 1),\n    end=datetime(2025, 1, 31),\n)\n\nfilter = SitemapFilter(date_range=january_2_to_30_2025)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#today","title":"<code>Today</code>","text":"<p>Today as range for filtering sitemap URLs.</p> Example Python<pre><code>from index_now import Today, SitemapFilter\n\ntoday = Today()\n\nfilter = SitemapFilter(date_range=today)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#yesterday","title":"<code>Yesterday</code>","text":"<p>Yesterday as range for filtering sitemap URLs.</p> Example Python<pre><code>from index_now import Yesterday, SitemapFilter\n\nyesterday = Yesterday()\n\nfilter = SitemapFilter(date_range=yesterday)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#day","title":"<code>Day</code>","text":"<p>A specific date for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>day</code> <code>datetime</code> <p>The specific day to filter sitemap URLs.</p> required Example Python<pre><code>from datetime import datetime\nfrom index_now import Day, SitemapFilter\n\nnew_year_2025 = Day(datetime(2025, 1, 1))\n\nfilter = SitemapFilter(date_range=new_year_2025)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#daysago","title":"<code>DaysAgo</code>","text":"<p>A number of days ago from today as range for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>days_ago</code> <code>int</code> <p>The number of days ago to filter sitemap URLs.</p> required Example Python<pre><code>from index_now import DaysAgo, SitemapFilter\n\ntwo_days_ago = DaysAgo(2)\n\nfilter = SitemapFilter(date_range=two_days_ago)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#laterthan","title":"<code>LaterThan</code>","text":"<p>Period of time after a specific date as range for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>date</code> <code>datetime</code> <p>The specific date to filter sitemap URLs.</p> required Example Python<pre><code>from datetime import datetime\nfrom index_now import LaterThan, SitemapFilter\n\nafter_new_year_2025 = LaterThan(datetime(2025, 1, 1))\n\nfilter = SitemapFilter(date_range=after_new_year_2025)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#laterthanandincluding","title":"<code>LaterThanAndIncluding</code>","text":"<p>Period of time after and including a specific date as range for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>date</code> <code>datetime</code> <p>The specific date to filter sitemap URLs.</p> required Example Python<pre><code>from datetime import datetime\nfrom index_now import LaterThanAndIncluding, SitemapFilter\n\nnew_year_2025_or_later = LaterThanAndIncluding(datetime(2025, 1, 1))\n\nfilter = SitemapFilter(date_range=new_year_2025_or_later)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#earlierthan","title":"<code>EarlierThan</code>","text":"<p>Period of time before a specific date as range for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>date</code> <code>datetime</code> <p>The specific date to filter sitemap URLs.</p> required Example Python<pre><code>from datetime import datetime\nfrom index_now import EarlierThan, SitemapFilter\n\nbefore_2025 = EarlierThan(datetime(2025, 1, 1))\n\nfilter = SitemapFilter(date_range=before_2025)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/date-range/#earlierthanandincluding","title":"<code>EarlierThanAndIncluding</code>","text":"<p>Period of time before and including a specific date as range for filtering sitemap URLs.</p> <p>Parameters:</p> Name Type Description Default <code>date</code> <code>datetime</code> <p>The specific date to filter sitemap URLs.</p> required Example Python<pre><code>from datetime import datetime\nfrom index_now import EarlierThanAndIncluding, SitemapFilter\n\nnew_year_2025_or_before = EarlierThanAndIncluding(datetime(2025, 1, 1))\n\nfilter = SitemapFilter(date_range=new_year_2025_or_before)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Date Range","Last Modified"]},{"location":"reference/sitemap-filter/sitemap-filter/","title":"Sitemap Filter Settings","text":"","tags":["Documentation","Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"reference/sitemap-filter/sitemap-filter/#example","title":"Example","text":"<p>When you want full control over which URLs are submitted to IndexNow, the <code>SitemapFilter</code> can help. Let's imagine a basic sitemap with three URLs, each with different properties:</p> sitemap.xml<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com&lt;/loc&gt;\n        &lt;lastmod&gt;2025-01-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;always&lt;/changefreq&gt;\n        &lt;priority&gt;1.0&lt;/priority&gt;\n    &lt;/url&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com/page1&lt;/loc&gt;\n        &lt;lastmod&gt;2025-02-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;hourly&lt;/changefreq&gt;\n        &lt;priority&gt;0.8&lt;/priority&gt;\n    &lt;/url&gt;\n    &lt;url&gt;\n        &lt;loc&gt;https://example.com/page2&lt;/loc&gt;\n        &lt;lastmod&gt;2025-03-01&lt;/lastmod&gt;\n        &lt;changefreq&gt;daily&lt;/changefreq&gt;\n        &lt;priority&gt;0.5&lt;/priority&gt;\n    &lt;/url&gt;\n&lt;/urlset&gt;\n</code></pre> <p>The date range filter options can ensure that only URLs that has been modified in 2025 are submitted to IndexNow, and furthermore we can exclude any URLs that contain the word <code>page</code>. This will effectively submit the URL <code>https://example.com</code> to IndexNow because it is the only one that meets these criteria:</p> Python<pre><code>from index_now import DateRange, SitemapFilter, submit_sitemap_to_index_now, IndexNowAuthentication\n\nyear_2025 = DateRange(\n    start=datetime(2025, 1, 1),\n    end=datetime(2025, 12, 31),\n)\n\nfilter = SitemapFilter(date_range=year_2025, excludes=\"page\")\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_sitemap_to_index_now(\n    authentication, \"https://example.com/sitemap.xml\", filter)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"reference/sitemap-filter/sitemap-filter/#documentation","title":"Documentation","text":"","tags":["Documentation","Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"reference/sitemap-filter/sitemap-filter/#sitemapfilter","title":"<code>SitemapFilter</code>","text":"<p>Configuration class for filtering sitemap URLs based on text, change frequency, date ranges and other criteria.</p> <p>Attributes:</p> Name Type Description <code>change_frequency</code> <code>ChangeFrequency | str | None</code> <p>Optional filter for URLs based on change frequency, e.g. <code>daily</code>, <code>weekly</code>, <code>monthly</code>, etc. Note that if no <code>&lt;changefreq&gt;</code> element is found in the sitemap entry, the filter is bypassed. Ignored by default or if set to <code>None</code>.</p> <code>date_range</code> <code>DateRange | None</code> <p>Optional filter for URLs based on a date range, e.g. <code>Today</code>, <code>Day</code>, <code>DaysAgo</code>, <code>LaterThan</code>, <code>EarlierThan</code>, etc. Note that if no <code>&lt;lastmod&gt;</code> element is found in the sitemap entry, the filter is bypassed. Ignored by default or if set to <code>None</code>.</p> <code>contains</code> <code>str | None</code> <p>Optional filter for URLs. Can be simple string (e.g. <code>\"section1\"</code>) or regular expression (e.g. <code>r\"(section1)|(section2)\"</code>). Ignored by default or if set to <code>None</code>.</p> <code>excludes</code> <code>str | None</code> <p>Optional filter for URLs. Can be simple string (e.g. <code>\"not-include-this\"</code>) or regular expression (e.g. <code>r\"(not-include-this)|(not-include-that)\"</code>). Ignored by default or if set to <code>None</code>.</p> <code>skip</code> <code>int | None</code> <p>Optional number of URLs to be skipped. Ignored by default or if set to <code>None</code>.</p> <code>take</code> <code>int | None</code> <p>Optional limit of URLs to be taken. Ignored by default or if set to <code>None</code>.</p> Example <p>Get all URLs containing <code>section1</code>:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(contains=\"section1\")\n</code></pre> <p>Get all URLs that contain either <code>section1</code> or <code>section2</code>:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(contains=r\"(section1)|(section2)\")\n</code></pre> <p>Exclude any URL that contains <code>section3</code>:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(excludes=\"section3\")\n</code></pre> <p>Only the URLs modified within the past 2 days:</p> Python<pre><code>from index_now import SitemapFilter, DaysAgo\n\nfilter = SitemapFilter(date_range=DaysAgo(2))\n</code></pre> <p>Get all URLs from January, 2025:</p> Python<pre><code>from datetime import datetime\nfrom index_now import SitemapFilter, DateRange\n\njanuary_2025 = DateRange(\n    start=datetime(2025, 1, 1),\n    end=datetime(2025, 1, 31),\n)\n\nfilter = SitemapFilter(date_range=january_2025)\n</code></pre> <p>Get all URLs with a change frequency set to <code>daily</code>:</p> Python<pre><code>from index_now import SitemapFilter, ChangeFrequency\n\nfilter = SitemapFilter(change_frequency=ChangeFrequency.DAILY)\n</code></pre> <p>From a large sitemap, skip the first 10 URLs and take the next 20 URLs:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(skip=10, take=20)\n</code></pre>","tags":["Documentation","Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/","title":"User Guide \ud83d\udc68\u200d\ud83d\udd27","text":"<p>IndexNow for Python is a lightweight package and is intended to be easy to use. Find tutorials and background information in this section.</p>","tags":["Features","Tutorial"]},{"location":"user-guide/#quick-links","title":"Quick Links","text":"<p>How to submit:</p> <ul> <li>Single URL</li> <li>Multiple URLs</li> <li>Entire sitemap or multiple sitemaps</li> </ul> <p>How to use submit URLs to different search engines:</p> <ul> <li>Default endpoint options</li> <li>Custom endpoint</li> <li>Authentication</li> </ul> <p>How to use automated workflows:</p> <ul> <li>Automated sitemap submission with GitHub Actions</li> </ul> <p>Tips and tricks:</p> <ul> <li>Generate custom API keys</li> <li>Extract URLs from a sitemap</li> </ul>","tags":["Features","Tutorial"]},{"location":"user-guide/#support-the-project","title":"Support the Project","text":"<p>Become a Sponsor</p> <p>If you find this project helpful, please consider supporting its development. Your donations will help keep it alive and growing. Every contribution, no matter the size, makes a difference.</p> <p>Donate on GitHub Sponsors</p> <p>Thank you for your support! \ud83d\ude4c</p>","tags":["Features","Tutorial"]},{"location":"user-guide/github-actions/automated-workflows/","title":"How to Automatically Submit a Sitemap to IndexNow","text":"<p>If you use GitHub Actions to build and deploy your website, you can automate the process of submitting your sitemap to the IndexNow API. This is particularly useful if you have a large number of pages on your site that you want to submit all at once.</p> <p>Find a simplified version of IndexNow for Python on GitHub Actions and begin automating your workflows:</p> <p>View on GitHub Marketplace</p>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#workflow-automation-with-github-actions","title":"Workflow Automation with GitHub Actions","text":"<p>Regardless of whether your codebase is highly or less active, it is recommended that you do not submit your sitemap to IndexNow each time your site is deployed to production. This could overwhelm IndexNow and reduce the website's ranking.</p> <p>Instead, you should automate sitemap submissions to IndexNow using GitHub Actions at regular intervals, allowing the changes to accumulate over time and allowing the search engines crawlers time to index the latest content.</p> <p>Example workflow with GitHub Actions:</p> .github/workflows/submit_sitemap_to_index_now.yml<pre><code>name: Submit Sitemap to IndexNow\n\non:\n  schedule:\n    - cron: 0 0 1 * *  # Run at midnight UTC on the 1st day of each month.\n\njobs:\n  submit-sitemap:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Submit sitemap URLs to IndexNow\n        uses: jakob-bagterp/index-now-submit-sitemap-urls-action@v1\n        with:\n          host: example.com\n          api_key: ${{ secrets.INDEX_NOW_API_KEY }}\n          api_key_location: https://example.com/${{ secrets.INDEX_NOW_API_KEY }}.txt\n          endpoint: yandex\n          sitemap_locations: https://example.com/sitemap.xml\n</code></pre> <p>Checklist</p> <p>Before running the workflow, make sure you have done the following:</p> <ul> <li>Added the API key <code>INDEX_NOW_API_KEY</code> as a secret to your repository.</li> <li>Uploaded the API key to the location specified in the <code>api_key_location</code> parameter.</li> <li>Updated the URL of the sitemap in the <code>sitemap_location</code> parameter.</li> <li>Adjusted the <code>host</code>, <code>endpoint</code>, and other parameters to suit your needs.</li> </ul>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#scheduled-runs","title":"Scheduled Runs","text":"<p>The example above can be adjusted to run at different intervals. Simply adjust the <code>cron</code> job definition to your needs.</p> <p>Warning</p> <p>Too many submissions to any of the IndexNow API endpoints could result in your site being ranked lower by search engines, maybe even blacklisted. It's highly recommended to only submit sitemaps to the IndexNow API once a day or less, ideally only the latest updated URLs.</p>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#monthly-schedule","title":"Monthly Schedule","text":"<p>Run the workflow at midnight UTC on the first day of each month:</p> .github/workflows/submit_sitemap_to_index_now.yml<pre><code>    - cron: 0 0 1 * *\n</code></pre>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#weekly-schedule","title":"Weekly Schedule","text":"<p>Run the workflow at midnight UTC on the first day of each week:</p> .github/workflows/submit_sitemap_to_index_now.yml<pre><code>    - cron: 0 0 * * 0\n</code></pre>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#daily-schedule","title":"Daily Schedule","text":"<p>Run the workflow at midnight UTC on a daily basis:</p> .github/workflows/submit_sitemap_to_index_now.yml<pre><code>    - cron: 0 0 * * *\n</code></pre>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#only-submit-latest-changes","title":"Only Submit Latest Changes","text":"<p>Rather than submitting all the URLs in the sitemap as one large payload to IndexNow, you can also submit only the latest changes by targeting the latest modification date of each URL in the sitemap using the <code>&lt;lastmod&gt;</code> tag. This is particularly useful if you have a large number of pages on your site that you want to submit all at once when deploying your site.</p> <p>Simply adjust the <code>sitemap_days_ago</code> parameter to the desired number of days, as highlighted below:</p> .github/workflows/submit_sitemap_to_index_now.yml<pre><code>name: Submit Sitemap to IndexNow\n\non:\n  schedule:\n    - cron: 0 0 * * *  # Run daily at midnight UTC.\n\njobs:\n  submit-sitemap:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Submit sitemap URLs to IndexNow\n        uses: jakob-bagterp/index-now-submit-sitemap-urls-action@v1\n        with:\n          host: example.com\n          api_key: ${{ secrets.INDEX_NOW_API_KEY }}\n          api_key_location: https://example.com/${{ secrets.INDEX_NOW_API_KEY }}.txt\n          endpoint: yandex\n          sitemap_locations: https://example.com/sitemap.xml\n          sitemap_days_ago: 1\n</code></pre>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#event-triggered-workflows","title":"Event-Triggered Workflows","text":"<p>Imagine the sitemap is submitted before the site has been fully deployed. This is something we want to avoid, as otherwise we won't be using the most up-to-date sitemap.</p> <p>There are several ways to trigger workflows in GitHub Actions. The most common options in this context are:</p> <ul> <li>Use <code>needs</code> when having several jobs in the same workflow file.</li> <li>Use <code>workflow_run</code> when you want to trigger jobs in different workflow files.</li> </ul> <p>Tip</p> <p>If you want to update the previous workflow example, simple update the trigger to <code>workflow_run</code> instead of <code>schedule</code> and adapt the workflow names to your needs:</p> .github/workflows/submit_sitemap_to_index_now.yml<pre><code>on:\n  workflow_run:\n    workflows: [\"My Deployment Workflow\"]\n    branches: [master]\n    types: [completed]\n</code></pre>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#github-pages","title":"GitHub Pages","text":"<p>For users of GitHub Pages, you can still use the automated <code>index-now-submit-sitemap-urls-action</code> workflow. This will also work if you're using MkDocs to build your site with GitHub Pages, and it will probably work in many other cases as well.</p> <p>All you need to do is adjust the <code>on</code> condition and adapt the example below to your needs:</p> .github/workflows/submit_sitemap_to_index_now.yml<pre><code>on:\n  workflow_run:\n    workflows: [pages-build-deployment]\n    types: [completed]\n</code></pre> <p>Info</p> <p>The <code>workflow_run</code> event is used to trigger the workflow after the GitHub Pages build and deployment is completed. This ensures that the sitemap is submitted only after the latest changes are live.</p>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/github-actions/automated-workflows/#custom-github-actions-workflow","title":"Custom GitHub Actions Workflow","text":"<p>You can customise your workflow even more, although the starting point is the same: Put a YAML workflow file in the <code>.github/workflows</code> directory of your repository.</p> <p>Imagine that we want the workflow to be triggered every time you push to the <code>master</code> branch or create a pull request to the <code>master</code> branch, and we will then execute the <code>submit_sitemap_to_index_now()</code> method.</p> <p>Example of a workflow file:</p> .github/workflows/custom_workflow.yml<pre><code>name: Submit sitemap to IndexNow\n\non:\n  pull_request:\n    branches:\n      - master\n  push:\n    branches:\n      - master\n\njobs:\n  submit-sitemap:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v4\n      - name: Set up Python\n        uses: actions/setup-python@v5\n        with:\n          python-version: \"3.13\"\n      - name: Install dependencies\n        run: pip install index-now-for-python\n      - name: Submit sitemap to IndexNow\n        uses: jannekem/run-python-script-action@v1\n        with:\n          script: |\n            from index_now import submit_sitemap_to_index_now, IndexNowAuthentication, SearchEngineEndpoint\n\n            authentication = IndexNowAuthentication(\n                host=\"example.com\",\n                api_key=\"${{ secrets.INDEX_NOW_API_KEY }}\",\n                api_key_location=\"https://example.com/${{ secrets.INDEX_NOW_API_KEY }}.txt\",\n            )\n\n            submit_sitemap_to_index_now(authentication,\n                \"https://example.com/sitemap.xml\", endpoint=SearchEngineEndpoint.YANDEX)\n</code></pre>","tags":["Tutorial","GitHub Actions","Automation"]},{"location":"user-guide/how-to-submit/multiple-urls/","title":"Submit Multiple URLs to IndexNow","text":"","tags":["Tutorial"]},{"location":"user-guide/how-to-submit/multiple-urls/#how-to-submit-urls-in-bulk","title":"How to Submit URLs in Bulk","text":"<p>If several pages on your site have changed and you want them all to be reindexed, you can submit a list of URLs in bulk to the IndexNow API using the <code>submit_urls_to_index_now()</code> method:</p> Python<pre><code>from index_now import submit_urls_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nurls = [\n    \"https://example.com/page1\",\n    \"https://example.com/page2\",\n    \"https://example.com/page3\",\n]\n\nsubmit_urls_to_index_now(authentication, urls)\n</code></pre>","tags":["Tutorial"]},{"location":"user-guide/how-to-submit/single-url/","title":"Submit a URL to IndexNow","text":"","tags":["Tutorial"]},{"location":"user-guide/how-to-submit/single-url/#how-to-submit-individual-urls","title":"How to Submit Individual URLs","text":"<p>If one or more of your website pages have changed and you want each page to be reindexed, you can submit individual URLs to the IndexNow API using the <code>submit_url_to_index_now()</code> method:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page1\")\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page2\")\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page3\")\n</code></pre>","tags":["Tutorial"]},{"location":"user-guide/how-to-submit/sitemap/","title":"How to Submit All Sitemap URLs in Bulk to IndexNow","text":"","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#single-sitemap","title":"Single Sitemap","text":"<p>If several pages on your site have changed and you want them all to be reindexed, you can submit an entire sitemap of multiple URLs to the IndexNow API using the <code>submit_sitemap_to_index_now()</code> method:</p> Python<pre><code>from index_now import submit_sitemap_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_sitemap_to_index_now(authentication, \"https://example.com/sitemap.xml\")\n</code></pre> <p>Info</p> <p>What happens when submitting a sitemap with IndexNow for Python:</p> <ol> <li>Downloads the specified sitemap(s)</li> <li>Parses the sitemap(s) and extracts the URLs</li> <li>If any filters applied, filters the list of URLs to be submitted</li> <li>Submits the (filtered) URLs to the IndexNow API</li> </ol> <p>The IndexNow API will then process the URLs and return the results.</p>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#multiple-sitemaps","title":"Multiple Sitemaps","text":"<p>If you have multiple sitemaps, you can submit them all at once using the <code>submit_sitemaps_to_index_now()</code> method:</p> Python<pre><code>from index_now import submit_sitemaps_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsitemap_locations = [\n    \"https://example.com/sitemap1.xml\",\n    \"https://example.com/sitemap2.xml\",\n    \"https://example.com/sitemap3.xml\",\n]\n\nsubmit_sitemaps_to_index_now(authentication, sitemap_locations)\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#how-to-filter-the-urls","title":"How to Filter the URLs","text":"<p>Sometimes, you may wish to submit only a subset of the URLs in a sitemap. This could be URLs that have changed recently, URLs that have changed within a given timeframe, URLs that contain a specific text or even just a subset of URLs. The <code>SitemapFilter</code> configuration class gives you that flexibility.</p> <p>For example:</p> Python<pre><code>from index_now import submit_sitemap_to_index_now, IndexNowAuthentication, SitemapFilter\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nfilter = SitemapFilter(contains=\"section1\", skip=2, take=3)\n\nsubmit_sitemap_to_index_now(authentication,\n    \"https://example.com/sitemap.xml\", filter)\n</code></pre> <p>The same applies to submitting multiple sitemaps:</p> Python<pre><code>from index_now import submit_sitemaps_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsitemap_locations = [\n    \"https://example.com/sitemap1.xml\",\n    \"https://example.com/sitemap2.xml\",\n    \"https://example.com/sitemap3.xml\",\n]\n\nfilter = SitemapFilter(contains=\"section1\", skip=2, take=3)\n\nsubmit_sitemaps_to_index_now(authentication,\n    sitemap_locations, filter)\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#by-change-frequency","title":"By Change Frequency","text":"<p>Before submitting the sitemap to IndexNow, you can also target URLs with a specific <code>&lt;changefreq&gt;</code> value using the <code>change_frequency</code> parameter. Either use the predefined <code>ChangeFrequency</code> enumerations:</p> Python<pre><code>from index_now import SitemapFilter, ChangeFrequency\n\nfilter = SitemapFilter(change_frequency=ChangeFrequency.DAILY)\n</code></pre> <p>Or use a basic string input:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(change_frequency=\"daily\")\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#by-date-range","title":"By Date Range","text":"<p>The <code>date_range</code> parameter filters the <code>&lt;lastmod&gt;</code> elements of the sitemap entries, enabling you to select URLs modified within a specific date range.</p> <p>The <code>DateRange</code> and its many sibling classes make it easy to target URLs with a specific <code>&lt;lastmod&gt;</code> date. For example:</p> Python<pre><code>from datetime import datetime\nfrom index_now import DateRange, SitemapFilter\n\njanuary_2025 = DateRange(\n    start=datetime(2025, 1, 1),\n    end=datetime(2025, 1, 31),\n)\n\nfilter = SitemapFilter(date_range=january_2025)\n</code></pre> <p>Instead of using absolute dates, you can use relative ranges. For example, you can use the <code>DaysAgo</code> parameter to target URLs that have been modified recently:</p> Python<pre><code>from index_now import DaysAgo, SitemapFilter\n\ntwo_days_ago = DaysAgo(2)\n\nfilter = SitemapFilter(date_range=two_days_ago)\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#by-text","title":"By Text","text":"<p>You can limit the sitemap URLs to only those containing a specific text using the <code>contains</code> parameter of the <code>SitemapFilter</code>:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(contains=\"section1\")\n</code></pre> <p>Or exclude URLs that contain a specific text using the <code>excludes</code> parameter:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(excludes=\"page1\")\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#pattern-or-regular-expression","title":"Pattern or Regular Expression","text":"<p>The <code>contains</code> parameter also accepts regular expressions for more advanced filtering. For example, if you want to match URLs that contain either <code>section1</code> or <code>section2</code>, you can use the regular expression <code>r\"(section1)|(section2)\"</code>:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(contains=r\"(section1)|(section2)\")\n</code></pre> <p>Similarly, the <code>excludes</code> parameter can be used to exclude URLs that match a specific regular expression:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(excludes=r\"(page1)|(page2)\")\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#by-amount-skip-and-take","title":"By Amount: Skip and Take","text":"<p>Let's imagine a sitemap with a 100 URLs. You don't want to submit everything, so you can use the <code>skip</code> and <code>take</code> parameters to skip the first 10 URLs and submit the next 20 URLs:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(skip=10, take=20)\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#order-of-filtering-rules","title":"Order of Filtering Rules","text":"<p>Tip</p> <p>When using multiple filtering options at the same time, be aware of the order of the filtering rules. You don't have to use every rule, but each rule can reduce the pool of URLs before passing them on to the next filter.</p> <p>All of these parameters can be combined in the same filter. But the order of the parameters in the <code>SitemapFilter</code> configuration class is also the order in which the filtering rules will be applied:</p> Python<pre><code>from index_now import SitemapFilter\n\nfilter = SitemapFilter(\n    change_frequency=\"daily\",\n    date_range=DaysAgo(2),\n    contains=\"section1\",\n    excludes=\"search\",\n    skip=1,\n    take=1\n)\n</code></pre>","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/sitemap/#example","title":"Example","text":"<p>Let's imagine a sitemap with 9 URLs, the order of the <code>contains</code>, <code>skip</code>, and <code>take</code> parameters will filter the URLs like this:</p> <code>sitemap.xml</code> <code>contains=\"section1\"</code> <code>skip=1</code> <code>take=1</code> /page1 /page2 /page3 /section1/page1 /section1/page1 /section1/page2 /section1/page2 /section1/page2 /section1/page2 /section1/page3 /section1/page3 /section1/page3 /section2/page1 /section2/page2 /section2/page3","tags":["Tutorial","Sitemap","Filtering","Last Modified","Date Range","Change Frequency"]},{"location":"user-guide/how-to-submit/status-codes/","title":"How to Use Returned Status Codes","text":"<p>All submission methods return the status code of the response, e.g. <code>200</code> for success, <code>202</code> for accepted, <code>400</code> for bad request, etc.</p> <p>This can be useful if you want to know if the URLs or sitemaps were submitted successfully to the IndexNow API.</p>","tags":["Tutorial","Status Codes"]},{"location":"user-guide/how-to-submit/status-codes/#example-of-status-code-as-condition","title":"Example of Status Code as Condition","text":"<p>Before submitting all URLs, you can test if the first URL was submitted successfully and herafter continue with the rest of the URLs. A variation of previous examples:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nstatus_code = submit_url_to_index_now(authentication,\n    \"https://example.com/page1\")\n\nif status_code in [200, 202]:\n    print(\"URL was submitted successfully to IndexNow.\")\n    print(\"Continuing with the rest of the URLs...\")\n\n    submit_url_to_index_now(authentication,\n        \"https://example.com/page2\")\n    submit_url_to_index_now(authentication,\n        \"https://example.com/page3\")\nelse:\n    print(f\"Failure. No URL was submitted to IndexNow. Status code: {status_code}\")\n</code></pre>","tags":["Tutorial","Status Codes"]},{"location":"user-guide/how-to-submit/status-codes/#overview-of-status-codes","title":"Overview of Status Codes","text":"<p>According to the IndexNow API documentation, the following status codes are returned:</p> <p>Typical Status Codes</p> Code Response \u00a0Description <code>200</code> OK \u00a0URL submitted successfully. <code>202</code> Accepted URL received. IndexNow key validation pending. <code>400</code> Bad request The request was invalid. <code>403</code> Forbidden In case of key not valid (e.g. key not found, file found but key not in the file). <code>422</code> Unprocessable entity In case of URLs which don\u2019t belong to the host or the key is not matching the schema in the protocol. <code>429</code> Too many requests Too many requests (potential spam). <p>If you get <code>500</code> or similar as status code, it's likely that the server is experiencing an error. Then try again later.</p>","tags":["Tutorial","Status Codes"]},{"location":"user-guide/search-engines/authentication/","title":"How to Authenticate Your Site with IndexNow","text":"","tags":["Tutorial","Settings","Authentication"]},{"location":"user-guide/search-engines/authentication/#how-to-set-up-an-api-key","title":"How to Set Up an API Key","text":"<p>You need to create an API key and upload it to your website to verify ownership of your domain. The guide from Microsoft Bing is a good starting point. Once the API key is hosted on your website, the IndexNow API service can now authenticate your requests.</p> <p>The API key will be required every time you submit a URL to any IndexNow API.</p> <p>API Key Checklist</p> <p>The example key <code>a1b2c3d4</code> won't work, so try the API key generator from Microsoft Bing instead:</p> <ol> <li>Generate an API key.</li> <li>Upload a text file containing the API key to your website. This is the API key location.</li> </ol> <p>Example of a key file:</p> example.com/a1b2c3d4.txt<pre><code>a1b2c3d4\n</code></pre> <p>The key file doesn't have to be named <code>a1b2c3d4.txt</code> or placed in the root of your website, but this is considered the default location used by IndexNow. As long as the key file contains the API key <code>a1b2c3d4</code> and the file location is referenced on every submission, your requests should be accepted:</p> example.com/my-api-key-location.txt<pre><code>a1b2c3d4\n</code></pre> <p>If you're in any doubt, you can find more information about API keys in the official IndexNow documentation.</p>","tags":["Tutorial","Settings","Authentication"]},{"location":"user-guide/search-engines/authentication/#how-to-use-authentication-credentials","title":"How to Use Authentication Credentials","text":"<p>Once you have an API key and secured the location of the API key file, you can now update the <code>IndexNowAuthentication</code> class with the authentication credentials and submit individual URLs to the IndexNow API:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page1\")\n</code></pre>","tags":["Tutorial","Settings","Authentication"]},{"location":"user-guide/search-engines/authentication/#use-the-same-authentication-for-multiple-methods","title":"Use the Same Authentication for Multiple Methods","text":"<p>Whether you submit a single URL, multiple URLs, or an entire sitemap, the authentication credentials remain the same:</p> Python<pre><code>from index_now import submit_url_to_index_now, submit_urls_to_index_now, submit_sitemap_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nurls = [\"https://example.com/page1\", \"https://example.com/page2\", \"https://example.com/page3\"]\n\nsubmit_url_to_index_now(authentication, urls[0])\n\nsubmit_urls_to_index_now(authentication, urls)\n\nsubmit_sitemap_to_index_now(authentication, \"https://example.com/sitemap.xml\")\n</code></pre> <p>Tip</p> <p>Because the API key and authentication credentials are required each time you submit URLs to the IndexNow API, it's a good idea to create an IndexNowAuthentication class once and reuse it in all your scripts. Then you won't have to repeat the authentication credentials each time you submit a URL or more.</p> <p>For example, how to keep separate files in the same directory:</p> authentication.py<pre><code>from index_now import IndexNowAuthentication\n\nmy_authentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n</code></pre> submit_url.py<pre><code>from index_now import submit_url_to_index_now\nfrom .authentication import my_authentication\n\nsubmit_url_to_index_now(my_authentication, \"https://example.com/page1\")\n</code></pre> submit_sitemap.py<pre><code>from index_now import submit_sitemap_to_index_now\nfrom .authentication import my_authentication\n\nsubmit_sitemap_to_index_now(my_authentication, \"https://example.com/sitemap.xml\")\n</code></pre>","tags":["Tutorial","Settings","Authentication"]},{"location":"user-guide/search-engines/custom-endpoint/","title":"Custom Search Engine Endpoints for IndexNow","text":"","tags":["Tutorial","Settings","API Endpoint"]},{"location":"user-guide/search-engines/custom-endpoint/#how-to-submit-urls-to-a-specific-endpoint","title":"How to Submit URLs to a Specific Endpoint","text":"<p>If you're not covered by the default endpoints, you can submit to a custom endpoint. This is useful if you want to submit to a specific search engine or if you have a custom IndexNow endpoint.</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nendpoint_custom = \"https://example.com/indexnow\"\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page1\",\n    endpoint_custom)\n</code></pre>","tags":["Tutorial","Settings","API Endpoint"]},{"location":"user-guide/search-engines/custom-endpoint/#more-information","title":"More Information","text":"<p>If you don't know the endpoint URL for a particular search engine, some of the default endpoints might be a good place to start.</p> <p>Tip</p> <p>The IndexNow organisation maintains a list of currently available search engines that support the IndexNow API. Find it here:</p> <p>indexnow.org/searchengines.json</p>","tags":["Tutorial","Settings","API Endpoint"]},{"location":"user-guide/search-engines/default-endpoints/","title":"Search Engine Endpoints for IndexNow","text":"","tags":["Tutorial","Settings","API Endpoint","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"user-guide/search-engines/default-endpoints/#how-to-use-default-endpoints","title":"How to Use Default Endpoints","text":"<p>You should not need to use multiple endpoints when using IndexNow. The service is designed to propagate URLs to other search engines once you've submitted successfully to one IndexNow endpoint.</p> <p>But sometimes it's useful to know how to submit to a specific search engine. This guide will show you how to do this.</p>","tags":["Tutorial","Settings","API Endpoint","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"user-guide/search-engines/default-endpoints/#examples","title":"Examples","text":"","tags":["Tutorial","Settings","API Endpoint","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"user-guide/search-engines/default-endpoints/#submit-to-different-search-engines","title":"Submit to Different Search Engines","text":"<p>The <code>SearchEngineEndpoint</code> class contains a list of default search engine endpoints. You can use the same credentials to submit URLs to different IndexNow APIs:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication, SearchEngineEndpoint\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page1\",\n    SearchEngineEndpoint.BING)\n\nsubmit_url_to_index_now(authentication, \"https://example.com/page2\",\n    SearchEngineEndpoint.YANDEX)\n</code></pre>","tags":["Tutorial","Settings","API Endpoint","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"user-guide/search-engines/default-endpoints/#attempt-to-submit-to-multiple-search-engines-as-failover-strategy","title":"Attempt to Submit to Multiple Search Engines as Failover Strategy","text":"<p>To check that the search engine endpoints are operational and to ensure the successful submission of URLs, use the returned status code as a condition:</p> Python<pre><code>from index_now import submit_url_to_index_now, IndexNowAuthentication, SearchEngineEndpoint\n\nauthentication = IndexNowAuthentication(\n    host=\"example.com\",\n    api_key=\"a1b2c3d4\",\n    api_key_location=\"https://example.com/a1b2c3d4.txt\",\n)\n\nfor endpoint in SearchEngineEndpoint:\n    status_code = submit_url_to_index_now(authentication, \"https://example.com/page1\",\n        endpoint)\n    if status_code in [200, 202]:\n        print(\"URL was submitted successfully to IndexNow.\")\n        break\n</code></pre> <p>Warning</p> <p>It is not recommended to submit the same URLs to multiple endpoints. Once you have successfully submitted to one IndexNow endpoint, the IndexNow service is designed to propagate your URLs to other search engines, so you do not need to submit to multiple times.</p>","tags":["Tutorial","Settings","API Endpoint","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"user-guide/search-engines/default-endpoints/#list-of-default-endpoints","title":"List of Default Endpoints","text":"<p>The following endpoints are provided by default with the IndexNow for Python package:</p> Endpoint Enum Name Endpoint URL <code>SearchEngineEndpoint.INDEXNOW</code> IndexNow (default) <code>https://api.indexnow.org/indexnow</code> <code>SearchEngineEndpoint.BING</code> Microsoft Bing <code>https://www.bing.com/indexnow</code> <code>SearchEngineEndpoint.NAVER</code> Naver <code>https://searchadvisor.naver.com/indexnow</code> <code>SearchEngineEndpoint.SEZNAM</code> Seznam.cz <code>https://search.seznam.cz/indexnow</code> <code>SearchEngineEndpoint.YANDEX</code> Yandex <code>https://yandex.com/indexnow</code> <code>SearchEngineEndpoint.YEP</code> Yep <code>https://indexnow.yep.com/indexnow</code> <p>If you can't find the endpoint you are looking for, you can also use a custom endpoint.</p> <p>Tip</p> <p>The IndexNow organisation maintains a list of currently available search engines that support the IndexNow API. Find it here:</p> <p>indexnow.org/searchengines.json</p>","tags":["Tutorial","Settings","API Endpoint","Bing","Naver","Seznam","Yandex","Yep"]},{"location":"user-guide/tips-and-tricks/extract-urls-from-sitemap/","title":"How to Extract URLs from a Sitemap","text":"","tags":["Tutorial","Sitemap"]},{"location":"user-guide/tips-and-tricks/extract-urls-from-sitemap/#using-external-libraries","title":"Using External Libraries","text":"<p>The easiest way to obtain URLs from a sitemap is to parse the sitemap XML file using the <code>lxml</code> library. Example:</p> Python<pre><code>import requests\nimport lxml.etree\n\nresponse = requests.get(https://example.com/sitemap.xml)\nsitemap_tree = lxml.etree.fromstring(response.content)\nsitemap_urls = sitemap_tree.xpath(\"//ns:url/ns:loc/text()\", namespaces={\"ns\": \"http://www.sitemaps.org/schemas/sitemap/0.9\"})\n\nfor url in sitemap_urls:\n    print(url.strip())\n</code></pre> <p>This will print all the URLs from the sitemap:</p> <pre><code>https://example.com\nhttps://example.com/page1\nhttps://example.com/page2\n...\n</code></pre>","tags":["Tutorial","Sitemap"]},{"location":"user-guide/tips-and-tricks/extract-urls-from-sitemap/#using-existing-methods","title":"Using Existing Methods","text":"<p>Alternatively, you can simplify the process and use the existing methods in IndexNow for Python to retrieve and parse the sitemap XML file:</p> Python<pre><code>from index_now.sitemap.get import get_sitemap_xml\nfrom index_now.sitemap.parse import parse_sitemap_xml_and_get_urls\n\nsitemap_content = get_sitemap_xml(https://example.com/sitemap.xml)\nurls = parse_sitemap_xml_and_get_urls(sitemap_content)\n\nfor url in urls:\n    print(url)\n</code></pre> <p>The end result will be the same:</p> <pre><code>https://example.com\nhttps://example.com/page1\nhttps://example.com/page2\n...\n</code></pre>","tags":["Tutorial","Sitemap"]},{"location":"user-guide/tips-and-tricks/generate-api-keys/","title":"How to Generate API Keys for IndexNow","text":"","tags":["Tutorial","Settings","API Key"]},{"location":"user-guide/tips-and-tricks/generate-api-keys/#why-use-an-api-key","title":"Why Use an API Key?","text":"<p>To use the IndexNow API, you need to set an API key on your website to verify ownership of your domain. This should be kept secret and is required every time you submit a URL to the IndexNow API.</p>","tags":["Tutorial","Settings","API Key"]},{"location":"user-guide/tips-and-tricks/generate-api-keys/#generating-custom-api-keys","title":"Generating Custom API Keys","text":"<p>If you don't want to use the API key generator from Microsoft Bing, you can create your own API key.</p>","tags":["Tutorial","Settings","API Key"]},{"location":"user-guide/tips-and-tricks/generate-api-keys/#requirements","title":"Requirements","text":"<p>According to the IndexNow documentation, the requirements are:</p> <p>IndexNow API Key Requirements</p> <p>Your-key should have a minimum of 8 and a maximum of 128 hexadecimal characters. The key can contain only the following characters: lowercase characters (a-z), uppercase characters (A-Z), numbers (0-9), and dashes (-).</p>","tags":["Tutorial","Settings","API Key"]},{"location":"user-guide/tips-and-tricks/generate-api-keys/#basic-usage","title":"Basic Usage","text":"<p>In this example, we will generate a random 32 character hexadecimal string as an API key using the <code>generate_api_key()</code> method:</p> Python<pre><code>from index_now import generate_api_key\n\napi_key = generate_api_key()\n\nprint(api_key)\n</code></pre> <p>This will print a random API key of 32 characters. Example:</p> <pre><code>5017988d51af458491d21ecab6ed1811\n</code></pre>","tags":["Tutorial","Settings","API Key"]},{"location":"user-guide/tips-and-tricks/generate-api-keys/#custom-length","title":"Custom Length","text":"<p>The <code>generate_api_key()</code> method can also generate API keys of different lengths. Simply adjust the <code>length</code> parameter:</p> Python<pre><code>from index_now import generate_api_key\n\napi_key_16 = generate_api_key(length=16)\napi_key_64 = generate_api_key(length=64)\n\nprint(api_key_16)\nprint(api_key_64)\n</code></pre> <p>This will print two random API keys of 16 and 64 characters. Example:</p> <pre><code>5017988d51af4584\n5017988d51af458491d21ecab6ed18115017988d51af458491d21ecab6ed1811\n</code></pre>","tags":["Tutorial","Settings","API Key"]}]}